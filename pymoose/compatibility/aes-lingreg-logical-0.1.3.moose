aes_data = Input{arg_name = "aes_data"}: () -> AesTensor () @Host(alice)
aes_key = Input{arg_name = "aes_key"}: () -> AesKey () @Replicated(alice, bob, carole)
decrypt_0 = Decrypt: (AesKey, AesTensor) -> Tensor<Fixed128(24, 40)> (aes_key, aes_data) @Replicated(alice, bob, carole)
shape_0 = Shape: (Tensor<Fixed128(24, 40)>) -> HostShape (decrypt_0) @Host(bob)
slice_0 = Slice{slice = {start = 0, end = 1, step = 1}}: (HostShape) -> HostShape (shape_0) @Host(bob)
ones_0 = Ones: (HostShape) -> Tensor<Float64> (slice_0) @Host(bob)
expand_dims_0 = ExpandDims{axis = [1]}: (Tensor<Float64>) -> Tensor<Float64> (ones_0) @Host(bob)
cast_0 = Cast: (Tensor<Float64>) -> Tensor<Fixed128(24, 40)> (expand_dims_0) @Host(bob)
concatenate_0 = Concat{axis = 1}: [Tensor<Fixed128(24, 40)>] -> Tensor<Fixed128(24, 40)> (cast_0, decrypt_0) @Replicated(alice, bob, carole)
constant_0 = Constant{value = HostFloat64Tensor([[0.3655115067958832], [18.818185806274414], [59.83378601074219], [51.33037185668945], [99.85546875]])}: () -> Tensor<Float64> () @Mirrored3(alice, bob, carole)
cast_1 = Cast: (Tensor<Float64>) -> Tensor<Fixed128(24, 40)> (constant_0) @Mirrored3(alice, bob, carole)
dot_0 = Dot: (Tensor<Fixed128(24, 40)>, Tensor<Fixed128(24, 40)>) -> Tensor<Fixed128(24, 40)> (concatenate_0, cast_1) @Replicated(alice, bob, carole)
cast_2 = Cast: (Tensor<Fixed128(24, 40)>) -> Tensor<Float64> (dot_0) @Host(bob)
output_0 = Output: (Tensor<Float64>) -> Tensor<Float64> (cast_2) @Host(bob)
