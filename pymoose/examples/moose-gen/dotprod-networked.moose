op_101 = PrfKeyGen: () -> HostPrfKey () @Host(player2)
op_103 = DeriveSeed{sync_key = 4818207fead43d1b0b280d96ab65886b}: (HostPrfKey) -> HostSeed (op_101) @Host(player2)
send_21 = Send{rendezvous_key = 15000000000000000000000000000000, receiver = "player1"}: (HostSeed) -> HostUnit (op_103) @Host(player2)
receive_21 = Receive{rendezvous_key = 15000000000000000000000000000000, sender = "player2"}: () -> HostSeed () @Host(player1)
op_102 = DeriveSeed{sync_key = a459e902b18c40657dbf23179b9ebb83}: (HostPrfKey) -> HostSeed (op_101) @Host(player2)
send_20 = Send{rendezvous_key = 14000000000000000000000000000000, receiver = "player0"}: (HostSeed) -> HostUnit (op_102) @Host(player2)
receive_20 = Receive{rendezvous_key = 14000000000000000000000000000000, sender = "player2"}: () -> HostSeed () @Host(player0)
op_65 = PrfKeyGen: () -> HostPrfKey () @Host(player2)
op_72 = DeriveSeed{sync_key = 5586c7295f315faec4fa5dc5dcbe515b}: (HostPrfKey) -> HostSeed (op_65) @Host(player2)
op_69 = DeriveSeed{sync_key = 3c8a558d021ffee58631950349a2f559}: (HostPrfKey) -> HostSeed (op_65) @Host(player2)
op_66 = DeriveSeed{sync_key = 1a7d2b258c55e3d85a07a75f7c3283f8}: (HostPrfKey) -> HostSeed (op_65) @Host(player2)
op_6 = PrfKeyGen: () -> HostPrfKey () @Host(player2)
send_2 = Send{rendezvous_key = 02000000000000000000000000000000, receiver = "player1"}: (HostPrfKey) -> HostUnit (op_6) @Host(player2)
receive_2 = Receive{rendezvous_key = 02000000000000000000000000000000, sender = "player2"}: () -> HostPrfKey () @Host(player1)
op_44 = DeriveSeed{sync_key = 26dd2e5cabd886de254c4e100b53b94c}: (HostPrfKey) -> HostSeed (receive_2) @Host(player1)
op_45 = DeriveSeed{sync_key = 26dd2e5cabd886de254c4e100b53b94c}: (HostPrfKey) -> HostSeed (op_6) @Host(player2)
op_5 = PrfKeyGen: () -> HostPrfKey () @Host(player1)
send_1 = Send{rendezvous_key = 01000000000000000000000000000000, receiver = "player0"}: (HostPrfKey) -> HostUnit (op_5) @Host(player1)
receive_1 = Receive{rendezvous_key = 01000000000000000000000000000000, sender = "player1"}: () -> HostPrfKey () @Host(player0)
op_42 = DeriveSeed{sync_key = 268c36f9e7eff8059168d01593abeb39}: (HostPrfKey) -> HostSeed (receive_1) @Host(player0)
op_19 = DeriveSeed{sync_key = 94cc143732c160b6721b726e63d7c3b6}: (HostPrfKey) -> HostSeed (receive_1) @Host(player0)
op_43 = DeriveSeed{sync_key = 268c36f9e7eff8059168d01593abeb39}: (HostPrfKey) -> HostSeed (op_5) @Host(player1)
op_16 = DeriveSeed{sync_key = 94cc143732c160b6721b726e63d7c3b6}: (HostPrfKey) -> HostSeed (op_5) @Host(player1)
op_4 = PrfKeyGen: () -> HostPrfKey () @Host(player0)
send_0 = Send{rendezvous_key = 00000000000000000000000000000000, receiver = "player2"}: (HostPrfKey) -> HostUnit (op_4) @Host(player0)
receive_0 = Receive{rendezvous_key = 00000000000000000000000000000000, sender = "player0"}: () -> HostPrfKey () @Host(player2)
op_46 = DeriveSeed{sync_key = 2236977e28d37d82c0d95efb598eb3fe}: (HostPrfKey) -> HostSeed (receive_0) @Host(player2)
op_11 = DeriveSeed{sync_key = 2f70b4a5deba00422f72b549d9a84605}: (HostPrfKey) -> HostSeed (receive_0) @Host(player2)
op_41 = DeriveSeed{sync_key = 2236977e28d37d82c0d95efb598eb3fe}: (HostPrfKey) -> HostSeed (op_4) @Host(player0)
op_8 = DeriveSeed{sync_key = 2f70b4a5deba00422f72b549d9a84605}: (HostPrfKey) -> HostSeed (op_4) @Host(player0)
op_2 = Constant{value = HostFloat64Tensor([[4.0], [5.0], [6.0]])}: () -> HostFloat64Tensor () @Host(player1)
op_3 = RingFixedpointEncode{scaling_base = 2, scaling_exp = 40}: (HostFloat64Tensor) -> HostRing128Tensor (op_2) @Host(player1)
op_15 = Shape: (HostRing128Tensor) -> HostShape (op_3) @Host(player1)
send_7 = Send{rendezvous_key = 07000000000000000000000000000000, receiver = "player0"}: (HostShape) -> HostUnit (op_15) @Host(player1)
receive_7 = Receive{rendezvous_key = 07000000000000000000000000000000, sender = "player1"}: () -> HostShape () @Host(player0)
op_21 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (receive_7, op_19) @Host(player0)
op_20 = Fill{value = Ring128(0)}: (HostShape) -> HostRing128Tensor (receive_7) @Host(player0)
send_6 = Send{rendezvous_key = 06000000000000000000000000000000, receiver = "player2"}: (HostShape) -> HostUnit (op_15) @Host(player1)
receive_6 = Receive{rendezvous_key = 06000000000000000000000000000000, sender = "player1"}: () -> HostShape () @Host(player2)
op_22 = Fill{value = Ring128(0)}: (HostShape) -> HostRing128Tensor (receive_6) @Host(player2)
op_17 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (op_15, op_16) @Host(player1)
op_18 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_3, op_17) @Host(player1)
send_8 = Send{rendezvous_key = 08000000000000000000000000000000, receiver = "player2"}: (HostRing128Tensor) -> HostUnit (op_18) @Host(player1)
receive_8 = Receive{rendezvous_key = 08000000000000000000000000000000, sender = "player1"}: () -> HostRing128Tensor () @Host(player2)
op_0 = Constant{value = HostFloat64Tensor([[1.0, 2.0, 3.0]])}: () -> HostFloat64Tensor () @Host(player0)
op_1 = RingFixedpointEncode{scaling_base = 2, scaling_exp = 40}: (HostFloat64Tensor) -> HostRing128Tensor (op_0) @Host(player0)
op_7 = Shape: (HostRing128Tensor) -> HostShape (op_1) @Host(player0)
send_4 = Send{rendezvous_key = 04000000000000000000000000000000, receiver = "player2"}: (HostShape) -> HostUnit (op_7) @Host(player0)
receive_4 = Receive{rendezvous_key = 04000000000000000000000000000000, sender = "player0"}: () -> HostShape () @Host(player2)
op_13 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (receive_4, op_11) @Host(player2)
op_36 = Dot: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_13, receive_8) @Host(player2)
op_12 = Fill{value = Ring128(0)}: (HostShape) -> HostRing128Tensor (receive_4) @Host(player2)
op_34 = Dot: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_12, op_22) @Host(player2)
op_33 = Dot: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_12, receive_8) @Host(player2)
op_35 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_33, op_34) @Host(player2)
op_37 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_35, op_36) @Host(player2)
op_40 = Shape: (HostRing128Tensor) -> HostShape (op_37) @Host(player2)
op_54 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (op_40, op_46) @Host(player2)
op_53 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (op_40, op_45) @Host(player2)
op_55 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_53, op_54) @Host(player2)
op_58 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_37, op_55) @Host(player2)
send_10 = Send{rendezvous_key = 0a000000000000000000000000000000, receiver = "player1"}: (HostRing128Tensor) -> HostUnit (op_58) @Host(player2)
receive_10 = Receive{rendezvous_key = 0a000000000000000000000000000000, sender = "player2"}: () -> HostRing128Tensor () @Host(player1)
send_3 = Send{rendezvous_key = 03000000000000000000000000000000, receiver = "player1"}: (HostShape) -> HostUnit (op_7) @Host(player0)
receive_3 = Receive{rendezvous_key = 03000000000000000000000000000000, sender = "player0"}: () -> HostShape () @Host(player1)
op_14 = Fill{value = Ring128(0)}: (HostShape) -> HostRing128Tensor (receive_3) @Host(player1)
op_31 = Dot: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_14, op_17) @Host(player1)
op_9 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (op_7, op_8) @Host(player0)
op_24 = Dot: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_9, op_21) @Host(player0)
op_23 = Dot: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_9, op_20) @Host(player0)
op_25 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_23, op_24) @Host(player0)
op_10 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_1, op_9) @Host(player0)
send_5 = Send{rendezvous_key = 05000000000000000000000000000000, receiver = "player1"}: (HostRing128Tensor) -> HostUnit (op_10) @Host(player0)
receive_5 = Receive{rendezvous_key = 05000000000000000000000000000000, sender = "player0"}: () -> HostRing128Tensor () @Host(player1)
op_29 = Dot: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (receive_5, op_18) @Host(player1)
op_28 = Dot: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (receive_5, op_17) @Host(player1)
op_30 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_28, op_29) @Host(player1)
op_32 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_30, op_31) @Host(player1)
op_39 = Shape: (HostRing128Tensor) -> HostShape (op_32) @Host(player1)
op_51 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (op_39, op_44) @Host(player1)
op_50 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (op_39, op_43) @Host(player1)
op_52 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_50, op_51) @Host(player1)
op_57 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_32, op_52) @Host(player1)
send_9 = Send{rendezvous_key = 09000000000000000000000000000000, receiver = "player0"}: (HostRing128Tensor) -> HostUnit (op_57) @Host(player1)
receive_9 = Receive{rendezvous_key = 09000000000000000000000000000000, sender = "player1"}: () -> HostRing128Tensor () @Host(player0)
op_26 = Dot: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_10, op_20) @Host(player0)
op_27 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_25, op_26) @Host(player0)
op_38 = Shape: (HostRing128Tensor) -> HostShape (op_27) @Host(player0)
op_48 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (op_38, op_42) @Host(player0)
op_47 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (op_38, op_41) @Host(player0)
op_49 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_47, op_48) @Host(player0)
op_56 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_27, op_49) @Host(player0)
op_59 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_56, receive_9) @Host(player0)
op_60 = Shape: (HostRing128Tensor) -> HostShape (op_59) @Host(player0)
send_11 = Send{rendezvous_key = 0b000000000000000000000000000000, receiver = "player2"}: (HostShape) -> HostUnit (op_60) @Host(player0)
receive_11 = Receive{rendezvous_key = 0b000000000000000000000000000000, sender = "player0"}: () -> HostShape () @Host(player2)
op_73 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (receive_11, op_72) @Host(player2)
send_16 = Send{rendezvous_key = 10000000000000000000000000000000, receiver = "player0"}: (HostRing128Tensor) -> HostUnit (op_73) @Host(player2)
receive_16 = Receive{rendezvous_key = 10000000000000000000000000000000, sender = "player2"}: () -> HostRing128Tensor () @Host(player0)
op_70 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (receive_11, op_69) @Host(player2)
send_14 = Send{rendezvous_key = 0e000000000000000000000000000000, receiver = "player0"}: (HostRing128Tensor) -> HostUnit (op_70) @Host(player2)
receive_14 = Receive{rendezvous_key = 0e000000000000000000000000000000, sender = "player2"}: () -> HostRing128Tensor () @Host(player0)
op_67 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (receive_11, op_66) @Host(player2)
send_12 = Send{rendezvous_key = 0c000000000000000000000000000000, receiver = "player0"}: (HostRing128Tensor) -> HostUnit (op_67) @Host(player2)
receive_12 = Receive{rendezvous_key = 0c000000000000000000000000000000, sender = "player2"}: () -> HostRing128Tensor () @Host(player0)
op_61 = Sample{}: (HostShape) -> HostRing128Tensor (receive_11) @Host(player2)
op_68 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_61, op_67) @Host(player2)
send_13 = Send{rendezvous_key = 0d000000000000000000000000000000, receiver = "player1"}: (HostRing128Tensor) -> HostUnit (op_68) @Host(player2)
receive_13 = Receive{rendezvous_key = 0d000000000000000000000000000000, sender = "player2"}: () -> HostRing128Tensor () @Host(player1)
op_80 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (receive_10, receive_13) @Host(player1)
send_18 = Send{rendezvous_key = 12000000000000000000000000000000, receiver = "player0"}: (HostRing128Tensor) -> HostUnit (op_80) @Host(player1)
receive_18 = Receive{rendezvous_key = 12000000000000000000000000000000, sender = "player1"}: () -> HostRing128Tensor () @Host(player0)
op_63 = Shl{amount = 1}: (HostRing128Tensor) -> HostRing128Tensor (op_61) @Host(player2)
op_64 = Shr{amount = 41}: (HostRing128Tensor) -> HostRing128Tensor (op_63) @Host(player2)
op_71 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_64, op_70) @Host(player2)
send_15 = Send{rendezvous_key = 0f000000000000000000000000000000, receiver = "player1"}: (HostRing128Tensor) -> HostUnit (op_71) @Host(player2)
receive_15 = Receive{rendezvous_key = 0f000000000000000000000000000000, sender = "player2"}: () -> HostRing128Tensor () @Host(player1)
op_97 = Neg: (HostRing128Tensor) -> HostRing128Tensor (receive_15) @Host(player1)
op_62 = Shr{amount = 127}: (HostRing128Tensor) -> HostRing128Tensor (op_61) @Host(player2)
op_74 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_62, op_73) @Host(player2)
send_17 = Send{rendezvous_key = 11000000000000000000000000000000, receiver = "player1"}: (HostRing128Tensor) -> HostUnit (op_74) @Host(player2)
receive_17 = Receive{rendezvous_key = 11000000000000000000000000000000, sender = "player2"}: () -> HostRing128Tensor () @Host(player1)
op_75 = Fill{value = Ring128(1)}: (HostShape) -> HostRing128Tensor (op_60) @Host(player0)
op_77 = Shl{amount = 86}: (HostRing128Tensor) -> HostRing128Tensor (op_75) @Host(player0)
op_76 = Shl{amount = 126}: (HostRing128Tensor) -> HostRing128Tensor (op_75) @Host(player0)
op_78 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_59, op_76) @Host(player0)
op_79 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_78, receive_12) @Host(player0)
op_81 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_79, receive_18) @Host(player0)
op_84 = Shr{amount = 127}: (HostRing128Tensor) -> HostRing128Tensor (op_81) @Host(player0)
send_19 = Send{rendezvous_key = 13000000000000000000000000000000, receiver = "player1"}: (HostRing128Tensor) -> HostUnit (op_84) @Host(player0)
receive_19 = Receive{rendezvous_key = 13000000000000000000000000000000, sender = "player0"}: () -> HostRing128Tensor () @Host(player1)
op_91 = Mul: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (receive_17, receive_19) @Host(player1)
op_87 = Mul: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (receive_17, receive_19) @Host(player1)
op_89 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (receive_17, op_87) @Host(player1)
op_93 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_89, op_91) @Host(player1)
op_95 = Shl{amount = 87}: (HostRing128Tensor) -> HostRing128Tensor (op_93) @Host(player1)
op_99 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_97, op_95) @Host(player1)
op_105 = Shape: (HostRing128Tensor) -> HostShape (op_99) @Host(player1)
op_107 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (op_105, receive_21) @Host(player1)
op_111 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_99, op_107) @Host(player1)
send_23 = Send{rendezvous_key = 17000000000000000000000000000000, receiver = "player0"}: (HostRing128Tensor) -> HostUnit (op_111) @Host(player1)
receive_23 = Receive{rendezvous_key = 17000000000000000000000000000000, sender = "player1"}: () -> HostRing128Tensor () @Host(player0)
op_90 = Mul: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (receive_16, op_84) @Host(player0)
op_86 = Mul: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (receive_16, op_84) @Host(player0)
op_85 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (receive_16, op_84) @Host(player0)
op_88 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_85, op_86) @Host(player0)
op_92 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_88, op_90) @Host(player0)
op_94 = Shl{amount = 87}: (HostRing128Tensor) -> HostRing128Tensor (op_92) @Host(player0)
op_82 = Shl{amount = 1}: (HostRing128Tensor) -> HostRing128Tensor (op_81) @Host(player0)
op_83 = Shr{amount = 41}: (HostRing128Tensor) -> HostRing128Tensor (op_82) @Host(player0)
op_96 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_83, receive_14) @Host(player0)
op_98 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_96, op_94) @Host(player0)
op_100 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_98, op_77) @Host(player0)
op_104 = Shape: (HostRing128Tensor) -> HostShape (op_100) @Host(player0)
send_22 = Send{rendezvous_key = 16000000000000000000000000000000, receiver = "player2"}: (HostShape) -> HostUnit (op_104) @Host(player0)
receive_22 = Receive{rendezvous_key = 16000000000000000000000000000000, sender = "player0"}: () -> HostShape () @Host(player2)
op_109 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (receive_22, op_103) @Host(player2)
op_108 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (receive_22, op_102) @Host(player2)
op_106 = SampleSeeded{}: (HostShape, HostSeed) -> HostRing128Tensor (op_104, receive_20) @Host(player0)
op_110 = Sub: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_100, op_106) @Host(player0)
op_112 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_110, receive_23) @Host(player0)
send_24 = Send{rendezvous_key = 18000000000000000000000000000000, receiver = "player2"}: (HostRing128Tensor) -> HostUnit (op_112) @Host(player0)
receive_24 = Receive{rendezvous_key = 18000000000000000000000000000000, sender = "player0"}: () -> HostRing128Tensor () @Host(player2)
op_113 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_108, receive_24) @Host(player2)
op_114 = Add: (HostRing128Tensor, HostRing128Tensor) -> HostRing128Tensor (op_113, op_109) @Host(player2)
op_115 = RingFixedpointDecode{scaling_base = 2, scaling_exp = 40}: (HostRing128Tensor) -> HostFloat64Tensor (op_114) @Host(player2)
op_116 = Output{tag = "output_0"}: (HostFloat64Tensor) -> HostFloat64Tensor (op_115) @Host(player2)
